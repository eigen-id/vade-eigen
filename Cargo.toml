[package]
name = "vade-evan"
version = "0.4.0"
authors = ["evan GmbH"]
edition = "2018"
license-file = "LICENSE.txt"
description = "zero-knowledge-proof VC and TnT DID handling for vade"
homepage = "https://github.com/evannetwork/vade-evan"
documentation = "https://docs.rs/crate/vade-evan"
repository = "https://github.com/evannetwork/vade-evan"
readme = "README.md"
keywords = ["did", "ssi", "vc", "zkp"]
build = "build.rs"

[lib]
name = "vade_evan"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[[bin]]
name = "vade_evan_cli"
path = "src/main.rs"
required-features = ["target-cli"]

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-Oz", "--enable-mutable-globals"]

[features]
default = ["bundle-default", "target-cli"]

# plugins we want to enable in our
bundle-default = [
    "plugin-did-sidetree",
    "plugin-did-substrate",
    "plugin-didcomm",
    "plugin-jwt-vc",
    "plugin-vc-zkp-bbs",
]

# defines a feature named `sdk`, this feature should be enabled when plugin is compiled for IN3 sdk
bundle-sdk = [
    "plugin-did-sidetree",
    "plugin-vc-zkp-bbs",
]

plugin-vade-signer = [
    "vade-signer",
]

plugin-did-sidetree = [
    "capability-did-read",
    "capability-did-write",
    "vade-sidetree",
]

plugin-did-substrate = [
    "capability-did-read",
    "capability-did-write",
    "plugin-vade-signer",
    "vade-evan-substrate",
]

plugin-didcomm = [
    "capability-didcomm",
    "vade-didcomm",
    "vade-didcomm/portable", # target related, should be moved :/
]

plugin-jwt-vc = [
    "capability-vc-zkp",
    "plugin-vade-signer",
    "vade-jwt-vc",
]

plugin-vc-zkp-bbs = [
    "capability-vc-zkp",
    "plugin-vade-signer",
    "vade-evan-bbs",
]

# enable didcomm related functions in targets
capability-didcomm = []

# enable did resolve in targets
capability-did-read = []

# enable did create and update in targets
capability-did-write = []

# enable sdk related features
capability-sdk = []

# enable vc related functiosn in targets
capability-vc-zkp = []

# build for consuming vade-evan from C
target-c-lib = [
    "tokio",
    "vade-didcomm/portable",
]

# build for command line usage
target-cli = [
    "clap",
    "tokio",
    "vade-didcomm/portable",
]

# build for consuming vade-evan from Java
target-java-lib = [
    "target-c-lib",
]

# build for usage in wasm
target-wasm = [
    "vade-didcomm/wasm",
    "vade-evan-bbs/wasm",
]

[dependencies]
async-trait = "0.1.31"
cfg-if = "0.1"
jni = "0.19.0"
ring = { version = "0.16.19", optional = true }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0.53", features = ["preserve_order", "raw_value"] }
vade = "0.1.0"
thiserror = "1.0.38"
anyhow = "1.0.68"

###################################################################### feature specific dependencies
# feature "plugin-vc-zkp-bbs"
vade-evan-bbs = { version = "0.3.0", optional = true, default-features = false }

# feature "target-cli"
clap = { version = "2.33.1", optional = true }
tokio = { version = "=1.7.1", optional = true, features = ["rt-multi-thread", "macros"] }

# feature "plugin-did-substrate"
vade-evan-substrate = { version = "0.2.0", optional = true }
vade-signer = { version = "0.0.1", optional = true }

# feature "plugin-jwt-vc"
vade-jwt-vc = { version = "0.2.0", optional = true }

# feature "plugin-universal-resolver"
vade-universal-resolver = { version = "0.0.4", optional = true }

# feature "plugin-did-sidetree"
vade-sidetree = { git = "https://github.com/evannetwork/vade-sidetree.git", branch = "develop", version = "0.0.3", optional = true }

# feature "plugin-didcomm"
vade-didcomm = { version = "0.3.0", optional = true }

# add openssl dependency for specific targets
[target.'cfg(any(target_arch = "x86_64-unknown-linux-gnu", target_arch = "x86_64-apple-darwin", target_arch = "aarch64-apple-darwin", target_arch = "x86_64-pc-windows-msvc"))'.dependencies]
openssl = { version = "*", features = ["vendored"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6"
console_log = { version = "0.2", features = ["color"] }
log = "0.4.8"
serde_derive = "1.0.114"
wasm-bindgen = { version = "0.2", features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.5"

[dev-dependencies]
tokio = { version = "0.2.22", features = ["macros", "rt-threaded"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.12"

[build-dependencies]
serde = "1.0"
serde_derive = "1.0.114"
toml = "0.5.10"
