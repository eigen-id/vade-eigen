[package]
name = "vade-evan"
version = "0.4.0"
authors = ["evan GmbH"]
edition = "2018"
license-file = "LICENSE.txt"
description = "zero-knowledge-proof VC and TnT DID handling for vade"
homepage = "https://github.com/evannetwork/vade-evan"
documentation = "https://docs.rs/crate/vade-evan"
repository = "https://github.com/evannetwork/vade-evan"
readme = "README.md"
keywords = ["did", "ssi", "vc", "zkp"]

[lib]
name = "vade_evan"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib", "staticlib"]

[[bin]]
name = "vade_evan_cli"
path = "src/main.rs"
required-features = ["cli"]

[package.metadata.wasm-pack.profile.release]
wasm-opt = ["-Oz", "--enable-mutable-globals"]

[features]
default = [
    "cli",
    "did",
    "didcomm",
    "portable",
    "vc-zkp",
]

# add command line interface; not compatible with `wasm` feature
cli = [
    "clap",
    "did",
    "didcomm",
    "tokio",
    "vc-zkp",
]

# expose C interface for C applications to use vade
c-lib = [
    "did",
    "tokio",
]

# expose Java interface for Java applications to use vade
java-lib = ["c-lib"]

# enables using DIDs, also required for some vc-zkp functions
did = [
    "did-sidetree",
    "did-read",
    "did-write",
]

# enables zkp plugins, required for zkp plugins
vc-zkp = [
    "vc-zkp-bbs",
    "vc-zkp-cl",
    "vc-jwt",
]

# dedicated vc handlers
vc-zkp-bbs = [
    "vade-signer",
    "vade-evan-bbs",
]
vc-zkp-cl = [
    "ring",
    "vade-signer",
    "vade-evan-cl",
]

# dummy feature to support vade-evan-cl
vade-evan-cl = []

# enables did_resolve related functions and commands
did-read = []

# enables did_create, did_update related functions and commands
did-write = []

# dedicated did resolvers
did-sidetree = [
    "vade-sidetree",
    "vade-sidetree/web-requests",
]
did-substrate = [
    "vade-signer",
    "vade-evan-substrate",
]
did-universal-resolver = [
    "vade-universal-resolver",
]

# enables didcomm message features
didcomm = [
    "vade-didcomm",
]

# default native setup, vade-evan-cl is disabled currently
portable = [
    "vade-didcomm/portable",
]

# enables JWT signature based VC support
vc-jwt = [
    "vade-signer",
    "vade-jwt-vc",
]

# build to run as wasm file; not compatible with `native` feature, vade-evan-cl is disabled currently
wasm = [
    "vade-didcomm/wasm",
    "vade-evan-bbs/wasm",
]

# defines a feature named `sdk`, this feature should be enabled when plugin is compiled for IN3 sdk
sdk = [
    "c-lib",
    "vc-zkp-bbs",
    "portable",
    "did-read",
    "did-write",
    "did-sidetree",
    "vade-evan-bbs/sdk",
    "vade-sidetree/sdk",
]

[dependencies]
async-trait = "0.1.31"
cfg-if = "0.1"
jni = "0.19.0"
ring = { version = "0.16.19", optional = true }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0.53", features = ["preserve_order", "raw_value"] }
vade = "0.1.0"
###################################################################### feature specific dependencies
# feature "vc-zkp-bbs"
vade-evan-bbs = { git = "https://github.com/evannetwork/vade-evan-bbs.git", branch = "sdk", optional = true, default-features = false }

# feature "vc-zkp-cl", it will be enabled when vade-evan-cl is published to crates.io
# vade-evan-cl = { git = "https://github.com/evannetwork/vade-evan-cl.git", branch = "develop", version = "0.1.3", default-features = false }

# feature "cli"
clap = { version = "2.33.1", optional = true }
tokio = { version = "=1.7.1", optional = true, features = ["rt-multi-thread", "macros"] }
# feature "did-substrate"
vade-evan-substrate = { version = "0.2.0", optional = true }
vade-signer = { git = "https://github.com/evannetwork/vade-signer.git", branch = "develop", version = "0.0.1", optional = true }
# feature "vc-jwt"
vade-jwt-vc = { version = "0.2.0", optional = true }
# feature "did-universal-resolver"
vade-universal-resolver = { version = "0.0.4", optional = true }
# feature "did-sidetree"
vade-sidetree = { git = "https://github.com/evannetwork/vade-sidetree.git", branch = "sdk", version = "0.0.3", default-features = false, optional = true }
# feature "didcomm"
vade-didcomm = { version = "0.3.0", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6"
console_log = { version = "0.2", features = ["color"] }
log = "0.4.8"
serde_derive = "1.0.114"
wasm-bindgen = { version = "0.2",features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.5"

[dev-dependencies]
tokio = { version = "0.2.22", features = ["macros", "rt-threaded"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.12"
