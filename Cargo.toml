[package]
name = "vade-evan"
version = "0.0.1"
authors = ["Philip Kaiser <philip.kaiser@evan.team>"]
edition = "2018"

[features]
default = ["did", "vc-zkp"]

did = [
    "blake2-rfc",
    "byteorder",
    "futures",
    "parity_scale_codec",
    "regex",
    "reqwest",
    "sp-core",
    "sp-runtime-interface",
    "sp-std",
    "sp-storage",
    "thiserror",
    "twox-hash",
    "ws",
    "web-sys",
]

vc-zkp = [
    "data-encoding",
    "ursa",
    "wasm-timer",
]

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
async-trait = "0.1.31"
blake2-rfc = { version = "0.2.18", optional = true }
byteorder = { version = "1.3.4", optional = true }
data-encoding = { version = "2.2.0", optional = true }
env_logger = "0.7.1"
futures = { version = "0.3.5", optional = true }
hex = "0.4.2"
libsecp256k1 = "0.3.5"
log = "0.4.8"
parity_scale_codec = { package ="parity-scale-codec", version = "1.3.0", optional = true }
regex = { version = "1.3.7", optional = true }
reqwest = { version = "0.10.4", default-features= false, features = ["json", "default-tls"], optional = true }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0.53", features = ["preserve_order", "raw_value"] }
sha2 = "0.8.1"
sha3 = "0.8.2"
sp-core = { version = "2.0.0-rc4", default-features = false, optional = true }
sp-runtime-interface = { version = "2.0.0-rc4", default-features = false, features = ["disable_target_static_assertions" ], optional = true}
sp-std = { version = "2.0.0-rc4", default-features = false, optional = true }
sp-storage = { version = "2.0.0-rc4", default-features = false, optional = true }
thiserror = { version = "1.0", optional = true }
twox-hash = { version = "1.5.0", optional = true }
# we need to compile ursa manually because the latest published crate (0.3.2) does not support wasm yet
# ursa = "0.3.2"
ursa = { path = "./../ursa/libursa", features=["portable_wasm"], default-features = false, optional = true }
uuid = { version = "0.8.1", features = ["serde", "v4", "wasm-bindgen"] }
vade = { path = "../vade", version = "0.0.7" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
chrono = { version = "0.4.11",  default-features = false, features=["wasm-bindgen", "clock", "js-sys"] }
ws = { version = "0.7", features = ["ssl"], optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.6"
console_log = { version = "0.2", features = ["color"] }
js-sys = { version = "0.3" }
serde_derive = "1.0.114"
wasm-bindgen = { version = "0.2",features = ["serde-serialize"] }
wasm-bindgen-futures = "0.4.5"
wasm-timer = { version = "0.2.4", optional = true }
web-sys = { version = "0.3.39", features = [
    'WebSocket',
    'Response',
    'EventTarget',
    'Event',
    'MessageEvent',
	'ErrorEvent',
    'console'
], optional = true }

[dev-dependencies]
tokio = { version = "0.2.21", features = ["macros", "rt-threaded"] }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3.12"
