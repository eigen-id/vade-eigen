name: Cargo Build & Test

on:
  push:
  pull_request:

env: 
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, aarch64-apple-darwin, x86_64-pc-windows-msvc]
        toolchain: [stable, nightly]
        exclude:
        # Don't test linux/windows targets on macos
        - os: macos-latest
          target: x86_64-unknown-linux-gnu
        - os: macos-latest
          target: x86_64-pc-windows-msvc
        # Don't test darwin/windows targets on ubuntu
        - os: ubuntu-latest
          target: x86_64-apple-darwin
        - os: ubuntu-latest
          target: aarch64-apple-darwin
        - os: ubuntu-latest
          target: x86_64-pc-windows-msvc
        # Don't test darwin/linux targets on ubuntu
        - os: windows-latest
          target: x86_64-apple-darwin
        - os: windows-latest
          target: aarch64-apple-darwin
        - os: windows-latest
          target: x86_64-unknown-linux-gnu

    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        components: rustfmt, clippy
        target: ${{ matrix.target }}
        override: true
    - run: rustup target add ${{ matrix.target }}
    - name: Install clang for ubuntu
      run: |
         if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt install -y clang
         fi
      shell: bash
    - name: Build
      run: cargo build --release --target=${{ matrix.target }}
    - name: Run tests
      run: cargo test --verbose