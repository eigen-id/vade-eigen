# see https://nbsoftsolutions.com/blog/azure-pipelines-for-rust-projects
strategy:
  matrix:
    windows-latest:
     imageName: 'windows-latest'
     rustup_toolchain: stable
    # mac-latest:
    #   imageName: 'macOS-latest'
    #   rustup_toolchain: stable
    #  linux-latest:
    #    imageName: 'ubuntu-latest'
    #    rustup_toolchain: stable

pool:
  vmImage: $(imageName)

steps:
  - template: '_build/install-rust.yml'
  - script: |
      set OPENSSL_DIR=D:\a\1\s\vcpkg\packages\openssl-windows_x64-windows
      dir D:
      dir D:\a
      dir D:\a\1
      dir D:\a\1\s
      dir D:\a\1\s\vcpkg
      dir D:\a\1\s\vcpkg\packages
      dir D:\a\1\s\vcpkg\packages\openssl-windows_x64-windows
      cargo build --release --features cli
    displayName: Cargo build
  #- script: cargo test --release
  #  displayName: Cargo test
  - task: ArchiveFiles@2
    displayName: 'Archive build to zip'
    inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/target'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/VADE_$(Build.BuildId).zip'
        replaceExistingArchive: true
  - upload: $(Build.ArtifactStagingDirectory)/VADE_$(Build.BuildId).zip
    artifact: drop2
  
